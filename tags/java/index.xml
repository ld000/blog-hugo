<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on ld000</title>
    <link>http://ld000.space/tags/java/</link>
    <description>Recent content in Java on ld000</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>ld000</copyright>
    <lastBuildDate>Wed, 28 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ld000.space/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>java 调用 c# 的方法</title>
      <link>http://ld000.space/post/java_call_cnet/</link>
      <pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ld000.space/post/java_call_cnet/</guid>
      <description>&lt;p&gt;java 调用 c# 程序的几种方式。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>翻译: Spring AOP 讨论最多的问题 #1 - aspects 没有生效</title>
      <link>http://ld000.space/post/aspects_are_not_applied/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ld000.space/post/aspects_are_not_applied/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html&#34;&gt;http://denis-zhdanov.blogspot.com/2009/07/spring-aop-top-problem-1-aspects-are.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这篇文章继续讨论从 &lt;a href=&#34;http://denis-zhdanov.blogspot.com/2009/05/spring-aop-top-problem-2.html&#34;&gt;Spring AOP top problem #2 - java.lang.ClassCastException: $Proxy7&lt;/a&gt; 开始的话题。在这个话题里，我想要说明一些现在接触 spring AOP 的 spring 用户(特别是新用户)讨论最多(从我的观点看来)的问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RandomAccess 接口使用</title>
      <link>http://ld000.space/post/random-access/</link>
      <pubDate>Sat, 19 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ld000.space/post/random-access/</guid>
      <description>&lt;p&gt;List 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。此接口的主要目的是允许一般的算法更改其行为，从而在将其应用到随机或连续访问列表时能提供良好的性能。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>